; ModuleID = '/home/httpiego/PycharmProjects/VulDeeDiegator/TestPrograms/source.c'
source_filename = "/home/httpiego/PycharmProjects/VulDeeDiegator/TestPrograms/source.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [31 x i8] c"This is an unrelated message.\0A\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"The sum is: %d\0A\00", align 1
@__const.main.my_array = private unnamed_addr constant [5 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5], align 16
@.str.2 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @print_message() #0 !dbg !10 {
  %1 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)), !dbg !15
  ret void, !dbg !16
}

declare i32 @printf(i8* noundef, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @calculate_sum(i32 noundef %0, i32 noundef %1) #0 !dbg !17 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !23, metadata !DIExpression()), !dbg !24
  %5 = load i32, i32* %3, align 4, !dbg !25
  %6 = load i32, i32* %4, align 4, !dbg !26
  %7 = add nsw i32 %5, %6, !dbg !27
  ret i32 %7, !dbg !28
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @modify_element(i32* noundef %0) #0 !dbg !29 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  call void @llvm.dbg.declare(metadata i32** %2, metadata !33, metadata !DIExpression()), !dbg !34
  %3 = load i32*, i32** %2, align 8, !dbg !35
  %4 = load i32, i32* %3, align 4, !dbg !36
  %5 = mul nsw i32 %4, 3, !dbg !37
  %6 = load i32*, i32** %2, align 8, !dbg !38
  store i32 %5, i32* %6, align 4, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @inner_function(i32* noundef %0, i32 noundef %1) #0 !dbg !41 {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  call void @llvm.dbg.declare(metadata i32** %3, metadata !44, metadata !DIExpression()), !dbg !45
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !46, metadata !DIExpression()), !dbg !47
  call void @llvm.dbg.declare(metadata i32* %5, metadata !48, metadata !DIExpression()), !dbg !50
  store i32 0, i32* %5, align 4, !dbg !50
  br label %6, !dbg !51

6:                                                ; preds = %25, %2
  %7 = load i32, i32* %5, align 4, !dbg !52
  %8 = load i32, i32* %4, align 4, !dbg !54
  %9 = icmp slt i32 %7, %8, !dbg !55
  br i1 %9, label %10, label %28, !dbg !56

10:                                               ; preds = %6
  %11 = load i32*, i32** %3, align 8, !dbg !57
  %12 = load i32, i32* %5, align 4, !dbg !59
  %13 = sext i32 %12 to i64, !dbg !57
  %14 = getelementptr inbounds i32, i32* %11, i64 %13, !dbg !57
  %15 = load i32, i32* %14, align 4, !dbg !57
  %16 = mul nsw i32 %15, 2, !dbg !60
  %17 = load i32*, i32** %3, align 8, !dbg !61
  %18 = load i32, i32* %5, align 4, !dbg !62
  %19 = sext i32 %18 to i64, !dbg !61
  %20 = getelementptr inbounds i32, i32* %17, i64 %19, !dbg !61
  store i32 %16, i32* %20, align 4, !dbg !63
  %21 = load i32*, i32** %3, align 8, !dbg !64
  %22 = load i32, i32* %5, align 4, !dbg !65
  %23 = sext i32 %22 to i64, !dbg !64
  %24 = getelementptr inbounds i32, i32* %21, i64 %23, !dbg !64
  call void @modify_element(i32* noundef %24), !dbg !66
  br label %25, !dbg !67

25:                                               ; preds = %10
  %26 = load i32, i32* %5, align 4, !dbg !68
  %27 = add nsw i32 %26, 1, !dbg !68
  store i32 %27, i32* %5, align 4, !dbg !68
  br label %6, !dbg !69, !llvm.loop !70

28:                                               ; preds = %6
  ret void, !dbg !73
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !74 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca [5 x i32], align 16
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  call void @print_message(), !dbg !77
  call void @llvm.dbg.declare(metadata i32* %2, metadata !78, metadata !DIExpression()), !dbg !79
  %6 = call i32 @calculate_sum(i32 noundef 7, i32 noundef 5), !dbg !80
  store i32 %6, i32* %2, align 4, !dbg !79
  %7 = load i32, i32* %2, align 4, !dbg !81
  %8 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i32 noundef %7), !dbg !82
  call void @llvm.dbg.declare(metadata [5 x i32]* %3, metadata !83, metadata !DIExpression()), !dbg !87
  %9 = bitcast [5 x i32]* %3 to i8*, !dbg !87
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %9, i8* align 16 bitcast ([5 x i32]* @__const.main.my_array to i8*), i64 20, i1 false), !dbg !87
  call void @llvm.dbg.declare(metadata i32* %4, metadata !88, metadata !DIExpression()), !dbg !89
  store i32 5, i32* %4, align 4, !dbg !89
  %10 = getelementptr inbounds [5 x i32], [5 x i32]* %3, i64 0, i64 0, !dbg !90
  %11 = load i32, i32* %4, align 4, !dbg !91
  call void @inner_function(i32* noundef %10, i32 noundef %11), !dbg !92
  call void @llvm.dbg.declare(metadata i32* %5, metadata !93, metadata !DIExpression()), !dbg !95
  store i32 0, i32* %5, align 4, !dbg !95
  br label %12, !dbg !96

12:                                               ; preds = %22, %0
  %13 = load i32, i32* %5, align 4, !dbg !97
  %14 = load i32, i32* %4, align 4, !dbg !99
  %15 = icmp slt i32 %13, %14, !dbg !100
  br i1 %15, label %16, label %25, !dbg !101

16:                                               ; preds = %12
  %17 = load i32, i32* %5, align 4, !dbg !102
  %18 = sext i32 %17 to i64, !dbg !104
  %19 = getelementptr inbounds [5 x i32], [5 x i32]* %3, i64 0, i64 %18, !dbg !104
  %20 = load i32, i32* %19, align 4, !dbg !104
  %21 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 noundef %20), !dbg !105
  br label %22, !dbg !106

22:                                               ; preds = %16
  %23 = load i32, i32* %5, align 4, !dbg !107
  %24 = add nsw i32 %23, 1, !dbg !107
  store i32 %24, i32* %5, align 4, !dbg !107
  br label %12, !dbg !108, !llvm.loop !109

25:                                               ; preds = %12
  %26 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)), !dbg !111
  ret i32 0, !dbg !112
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nounwind willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "Ubuntu clang version 14.0.0-1ubuntu1.1", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/httpiego/PycharmProjects/VulDeeDiegator/TestPrograms/source.c", directory: "/home/httpiego/PycharmProjects/VulDeeDiegator", checksumkind: CSK_MD5, checksum: "8187500a048e782b08ec5c2af6560e26")
!2 = !{i32 7, !"Dwarf Version", i32 5}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 7, !"PIC Level", i32 2}
!6 = !{i32 7, !"PIE Level", i32 2}
!7 = !{i32 7, !"uwtable", i32 1}
!8 = !{i32 7, !"frame-pointer", i32 2}
!9 = !{!"Ubuntu clang version 14.0.0-1ubuntu1.1"}
!10 = distinct !DISubprogram(name: "print_message", scope: !11, file: !11, line: 4, type: !12, scopeLine: 4, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!11 = !DIFile(filename: "TestPrograms/source.c", directory: "/home/httpiego/PycharmProjects/VulDeeDiegator", checksumkind: CSK_MD5, checksum: "8187500a048e782b08ec5c2af6560e26")
!12 = !DISubroutineType(types: !13)
!13 = !{null}
!14 = !{}
!15 = !DILocation(line: 5, column: 5, scope: !10)
!16 = !DILocation(line: 6, column: 1, scope: !10)
!17 = distinct !DISubprogram(name: "calculate_sum", scope: !11, file: !11, line: 9, type: !18, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!18 = !DISubroutineType(types: !19)
!19 = !{!20, !20, !20}
!20 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!21 = !DILocalVariable(name: "a", arg: 1, scope: !17, file: !11, line: 9, type: !20)
!22 = !DILocation(line: 9, column: 23, scope: !17)
!23 = !DILocalVariable(name: "b", arg: 2, scope: !17, file: !11, line: 9, type: !20)
!24 = !DILocation(line: 9, column: 30, scope: !17)
!25 = !DILocation(line: 10, column: 12, scope: !17)
!26 = !DILocation(line: 10, column: 16, scope: !17)
!27 = !DILocation(line: 10, column: 14, scope: !17)
!28 = !DILocation(line: 10, column: 5, scope: !17)
!29 = distinct !DISubprogram(name: "modify_element", scope: !11, file: !11, line: 13, type: !30, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!30 = !DISubroutineType(types: !31)
!31 = !{null, !32}
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!33 = !DILocalVariable(name: "element", arg: 1, scope: !29, file: !11, line: 13, type: !32)
!34 = !DILocation(line: 13, column: 26, scope: !29)
!35 = !DILocation(line: 14, column: 17, scope: !29)
!36 = !DILocation(line: 14, column: 16, scope: !29)
!37 = !DILocation(line: 14, column: 25, scope: !29)
!38 = !DILocation(line: 14, column: 6, scope: !29)
!39 = !DILocation(line: 14, column: 14, scope: !29)
!40 = !DILocation(line: 15, column: 1, scope: !29)
!41 = distinct !DISubprogram(name: "inner_function", scope: !11, file: !11, line: 17, type: !42, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!42 = !DISubroutineType(types: !43)
!43 = !{null, !32, !20}
!44 = !DILocalVariable(name: "arr", arg: 1, scope: !41, file: !11, line: 17, type: !32)
!45 = !DILocation(line: 17, column: 25, scope: !41)
!46 = !DILocalVariable(name: "size", arg: 2, scope: !41, file: !11, line: 17, type: !20)
!47 = !DILocation(line: 17, column: 36, scope: !41)
!48 = !DILocalVariable(name: "i", scope: !49, file: !11, line: 19, type: !20)
!49 = distinct !DILexicalBlock(scope: !41, file: !11, line: 19, column: 5)
!50 = !DILocation(line: 19, column: 13, scope: !49)
!51 = !DILocation(line: 19, column: 9, scope: !49)
!52 = !DILocation(line: 19, column: 20, scope: !53)
!53 = distinct !DILexicalBlock(scope: !49, file: !11, line: 19, column: 5)
!54 = !DILocation(line: 19, column: 24, scope: !53)
!55 = !DILocation(line: 19, column: 22, scope: !53)
!56 = !DILocation(line: 19, column: 5, scope: !49)
!57 = !DILocation(line: 20, column: 18, scope: !58)
!58 = distinct !DILexicalBlock(scope: !53, file: !11, line: 19, column: 35)
!59 = !DILocation(line: 20, column: 22, scope: !58)
!60 = !DILocation(line: 20, column: 25, scope: !58)
!61 = !DILocation(line: 20, column: 9, scope: !58)
!62 = !DILocation(line: 20, column: 13, scope: !58)
!63 = !DILocation(line: 20, column: 16, scope: !58)
!64 = !DILocation(line: 21, column: 25, scope: !58)
!65 = !DILocation(line: 21, column: 29, scope: !58)
!66 = !DILocation(line: 21, column: 9, scope: !58)
!67 = !DILocation(line: 22, column: 5, scope: !58)
!68 = !DILocation(line: 19, column: 31, scope: !53)
!69 = !DILocation(line: 19, column: 5, scope: !53)
!70 = distinct !{!70, !56, !71, !72}
!71 = !DILocation(line: 22, column: 5, scope: !49)
!72 = !{!"llvm.loop.mustprogress"}
!73 = !DILocation(line: 23, column: 1, scope: !41)
!74 = distinct !DISubprogram(name: "main", scope: !11, file: !11, line: 25, type: !75, scopeLine: 25, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!75 = !DISubroutineType(types: !76)
!76 = !{!20}
!77 = !DILocation(line: 27, column: 5, scope: !74)
!78 = !DILocalVariable(name: "sum", scope: !74, file: !11, line: 29, type: !20)
!79 = !DILocation(line: 29, column: 9, scope: !74)
!80 = !DILocation(line: 29, column: 15, scope: !74)
!81 = !DILocation(line: 30, column: 32, scope: !74)
!82 = !DILocation(line: 30, column: 5, scope: !74)
!83 = !DILocalVariable(name: "my_array", scope: !74, file: !11, line: 32, type: !84)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 160, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 5)
!87 = !DILocation(line: 32, column: 9, scope: !74)
!88 = !DILocalVariable(name: "size", scope: !74, file: !11, line: 33, type: !20)
!89 = !DILocation(line: 33, column: 9, scope: !74)
!90 = !DILocation(line: 35, column: 20, scope: !74)
!91 = !DILocation(line: 35, column: 30, scope: !74)
!92 = !DILocation(line: 35, column: 5, scope: !74)
!93 = !DILocalVariable(name: "i", scope: !94, file: !11, line: 38, type: !20)
!94 = distinct !DILexicalBlock(scope: !74, file: !11, line: 38, column: 5)
!95 = !DILocation(line: 38, column: 13, scope: !94)
!96 = !DILocation(line: 38, column: 9, scope: !94)
!97 = !DILocation(line: 38, column: 20, scope: !98)
!98 = distinct !DILexicalBlock(scope: !94, file: !11, line: 38, column: 5)
!99 = !DILocation(line: 38, column: 24, scope: !98)
!100 = !DILocation(line: 38, column: 22, scope: !98)
!101 = !DILocation(line: 38, column: 5, scope: !94)
!102 = !DILocation(line: 39, column: 32, scope: !103)
!103 = distinct !DILexicalBlock(scope: !98, file: !11, line: 38, column: 35)
!104 = !DILocation(line: 39, column: 23, scope: !103)
!105 = !DILocation(line: 39, column: 9, scope: !103)
!106 = !DILocation(line: 40, column: 5, scope: !103)
!107 = !DILocation(line: 38, column: 31, scope: !98)
!108 = !DILocation(line: 38, column: 5, scope: !98)
!109 = distinct !{!109, !101, !110, !72}
!110 = !DILocation(line: 40, column: 5, scope: !94)
!111 = !DILocation(line: 41, column: 5, scope: !74)
!112 = !DILocation(line: 43, column: 5, scope: !74)
